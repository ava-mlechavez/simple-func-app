name: Deploy Containerized Function 2

on:
  workflow_dispatch:
    inputs:
      python_version:
        description: "Python version of your function app"
        required: true
        default: "3.12"
      acr_repository_name:
        description: "Azure Container Repository name"
        required: true
        default: "simple_func_app"
      registry_username:
        description: "Azure Container Registry name"
        required: true
        default: "ragdemodevacr"
      function_app_name:
        description: "Function App Name"
        required: true
        default: "rag-demo-dev-func"

permissions:
  contents: read
  id-token: write

env:
  PYTHON_VERSION: ${{ github.event.inputs.python_version }}
  ACR_REPOSITORY_NAME: ${{ github.event.inputs.acr_repository_name }}
  REGISTRY_USERNAME: ${{ github.event.inputs.registry_username }}
  # AZURE_FUNCTION_APP_NAME2: ${{ github.event.inputs.function_app_name }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # pip install pytest pytest-asyncio

      # This is used to deploy to Azure resources using OIDC
      # Also used for pushing the image to ACR (has AcrPush role)
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Build docker image and push to ACR
        run: |
          docker build -t ${{ env.REGISTRY_USERNAME }}.azurecr.io/${{ env.ACR_REPOSITORY_NAME }}:${{ github.sha }} .
          # make sure the service principal above has AcrPush role
          az acr login --name ${{ env.REGISTRY_USERNAME }}
          docker push ${{ env.REGISTRY_USERNAME }}.azurecr.io/${{ env.ACR_REPOSITORY_NAME }}:${{ github.sha }}

      - name: Echo steps for debugging
        shell: bash
        run: |
          echo "AZURE_FUNCTION_APP_NAME2 is set to: ${{ env.AZURE_FUNCTION_APP_NAME2 }}"

      # make sure that managed identity has acrpull access
        # else this will give a confusing error:
        # e.g. Error: Error: Resource rag-demo-dev-func doesn't exist.
      - name: 'Deploy Azure Functions Container'
        uses: Azure/functions-container-action@v1
        id: fa
        with:
          # app-name: ${{ env.AZURE_FUNCTION_APP_NAME2 }}
          app-name: ${{ github.event.inputs.function_app_name }}
          image: ${{ env.REGISTRY_USERNAME }}.azurecr.io/${{ env.ACR_REPOSITORY_NAME }}:${{ github.sha }}
